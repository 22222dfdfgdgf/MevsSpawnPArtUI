-- Ensure Rayfield loads properly
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield', true))()

-- Wait for Rayfield to load completely before proceeding
if not Rayfield then
    warn("Failed to load Rayfield!")
    return
end

local Window = Rayfield:CreateWindow({
    Name = "Mev's Spawn Part Hub :)",
    LoadingTitle = "Mev's Spawn Part Hub :",
    LoadingSubtitle = "by Mevv",
    Theme = "Ocean",

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = "MevsTrollHub",
        FileName = "MevsTrollHub_Config"
    },

    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },

    KeySystem = true,
    KeySettings = {
        Title = "Join Discord",
        Subtitle = "Mev's Key System",
        Note = "Join My discord for the Key (https://discord.gg/FqyZWE9nz4)",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = true,
        Key = {"https://pastebin.com/raw/w051pyzV"}
    }
})

-- Load Configuration
Rayfield.LoadConfiguration()

-- Main Tab
local MainTab = Window:CreateTab("Spawn Part Window ðŸ¤¿ðŸ¤¡ðŸ”¨")
local MainSection = MainTab:CreateSection("W Trol UI -- Made by Mevv")


Rayfield:Notify({
    Title = "You executed the script",
    Content = "Very cool GUI",
    Duration = 5,
    Image = nil,
    Actions = {
        Ignore = {
            Name = "Okay!",
            Callback = function()
                print("The user tapped Okay!")
            end
        }
    },
})

-- Send Message Automatically When Injected
task.spawn(function()
    local TextChatService = game:GetService("TextChatService")
    local ChatChannel = TextChatService and TextChatService.TextChannels and TextChatService.TextChannels.RBXGeneral

    if ChatChannel then
        pcall(function() ChatChannel:SendAsync("Script Made by Mev!!") end)
    else
        warn("RBXGeneral chat channel not found!")
    end
end)

local spawnedParts = {} -- Initialize the table to store spawned parts

local Button = MainTab:CreateButton({
    Name = "Spawn Part",
    Callback = function()
        local player = game.Players.LocalPlayer
        local part = Instance.new("Part")
        part.Size = Vector3.new(4, 2, 4)
        part.Anchored = true
        part.Parent = workspace

        local character = player.Character
        if character and character.HumanoidRootPart then
            local rootPart = character.HumanoidRootPart
            local spawnDistance = 5
            part.CFrame = rootPart.CFrame * CFrame.new(0, 0, -spawnDistance)
        else
            warn("Player character or HumanoidRootPart not found!")
            part:Destroy()
            return
        end

        if not spawnedParts[player] then
            spawnedParts[player] = {}
        end
        table.insert(spawnedParts[player], part)
    end
})

local MainButton = MainTab:CreateButton({
    Name = "Delete All Parts",
    Callback = function()
        local player = game.Players.LocalPlayer
        if spawnedParts[player] then
            for _, part in ipairs(spawnedParts[player]) do
                if part and part.Parent then
                    part:Destroy()
                end
            end
            spawnedParts[player] = {}
        end
    end,
})
